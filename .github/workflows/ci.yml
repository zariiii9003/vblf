name: CI

on: [push, pull_request]

permissions: {}

env:
  PY_COLORS: "1"

jobs:
  test:
   runs-on:  ${{ matrix.os }}
   strategy:
     matrix:
       os: [ "ubuntu-latest", "windows-latest", "macos-latest" ]
       python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14", "pypy-3.11"]
     fail-fast: false
   steps:
   - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # 4.2.2
     with:
       fetch-depth: 0
       persist-credentials: false
   - name: Set up Python ${{ matrix.python-version }}
     uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # 5.6.0
     with:
       python-version: ${{ matrix.python-version }}
       allow-prereleases: true
   - name: Install dependencies
     run: |
       python -m pip install --upgrade pip
       python -m pip install tox
   - name: Test
     run: |
       tox -e py

  linter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # 4.2.2
      with:
        fetch-depth: 0
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # 5.6.0
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Run ruff linter
      run: |
        tox -e format,lint,type

  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # 4.2.2
      with:
        fetch-depth: 0
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # 5.6.0
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: python -m pip install build twine
    - name: Build wheel and sdist
      run: python -m build
    - name: Check artifacts
      run: twine check --strict dist/*
    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # 4.6.2
      with:
        name: dist-artifact
        path: dist/*

  docs:
    name: Build documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # 4.2.2
      with:
        fetch-depth: 0
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # 5.6.0
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Build documentation
      run: |
        tox -e docs
    - name: Upload documentation artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # 4.6.2
      with:
        name: doc-artifact
        path: build/*

  upload_pypi:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/vblf
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write  # for action-gh-release
      attestations: write  # for attest-build-provenance

    # create a new release for tagged commits
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # 4.3.0
      with:
        name: dist-artifact
        path: dist

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd  # 2.3.0
      with:
        subject-path: 'dist/*'

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # 1.12.4

    # - name: Release
    #   uses: softprops/action-gh-release@7b4da11513bf3f43f9999e90eabced41ab8bb048  # 2.2.0
    #   with:
    #     files: dist/*
